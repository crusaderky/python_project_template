[project]
name = "TEMPLATE"
authors = [{name = "TODO", email = "TODO@TODO.com"}]
license = {text = "Apache"}
description = "TODO"
keywords = ["TODO", "TODO"]
classifiers = [
    # TODO update choosing from https://pypi.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    # TODO your project dependencies here
    # numpy >= 1.23
    # pandas >= 2.0
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/TODO/TEMPLATE"

[project.readme]
text = "TODO"
content-type = "text/x-rst"

[project.optional-dependencies]
# TODO optional pip dependencies
# some_label = ["dependency1", "dependency2"]

[tool.setuptools]
packages = ["TEMPLATE"]
zip-safe = false # https://mypy.readthedocs.io/en/latest/installed_packages.html
include-package-data = true

[tool.setuptools_scm]
# Use hardcoded version when .git has been removed and this is not a package created
# by sdist. This is the case e.g. of a remote deployment with PyCharm.
fallback_version = "9999"

[tool.setuptools.package-data]
TEMPLATE = [
    "py.typed",
    "tests/data/*",
]

[build-system]
requires = [
    "setuptools>=66",
    "setuptools_scm[toml]",
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config -v -r sxfE --color=yes"
xfail_strict = true
python_files = ["test_*.py"]
testpaths = ["TEMPLATE/tests"]
filterwarnings = ["error"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: nocover",
    "pragma: no cover",
    "TYPE_CHECKING",
    "except ImportError",
    "@overload",
    '@(abc\.)?abstractmethod',
]

[tool.ruff]
builtins = ["ellipsis"]
exclude = [".eggs"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
  "E402",  # module level import not at top of file
  "SIM108",  # use ternary operator instead of if-else block
  "N999",  # Invalid module name: 'TEMPLATE'  TODO remove this line
]
select = [
  "F",    # Pyflakes
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "ISC",  # flake8-implicit-str-concat
  "SIM",  # flake8-simplify
  "E",    # Pycodestyle
  "W",    # Pycodestyle
  "I",    # isort
  "N",    # pep8-naming
  "UP",   # Pyupgrade
  "RUF",  # unused-noqa
  "EXE001",  #  Shebang is present but file is not executable
]

[tool.ruff.lint.isort]
known-first-party = ["TEMPLATE"]

[tool.mypy]
allow_incomplete_defs = false
allow_untyped_decorators = false
allow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["*.tests.*"]
allow_untyped_defs = true
